
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://fhmvdprcmhkolyzuecrr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZobXZkcHJjbWhrb2x5enVlY3JyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI1MDg5NDIsImV4cCI6MjA1ODA4NDk0Mn0._KsKBT6nK77grg8QEXe4uQbaChgso0qvdSXfQ7OG09o";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create Supabase client with enhanced realtime configuration
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    realtime: {
      params: {
        eventsPerSecond: 5 // Reduced from 10 to prevent excessive updates
      }
    },
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: false // Changed to false to prevent URL detection causing re-renders
    }
  }
);

// Set up realtime subscriptions for the main tables but with cleanup to prevent duplication
const setupRealtimeSubscriptions = () => {
  // Check if subscriptions already exist by adding a global flag
  if ((window as any).__supabaseSubscriptionsActive) {
    return [];
  }
  
  (window as any).__supabaseSubscriptionsActive = true;
  
  // Subscribe to analyses table changes
  const analysesChannel = supabase.channel('analyses-realtime')
    .on('postgres_changes', { 
      event: '*', 
      schema: 'public', 
      table: 'analyses' 
    }, payload => {
      console.log('Realtime update from analyses table:', payload);
    })
    .subscribe();

  // Subscribe to activities table changes
  const activitiesChannel = supabase.channel('activities-realtime')
    .on('postgres_changes', { 
      event: '*', 
      schema: 'public', 
      table: 'activities' 
    }, payload => {
      console.log('Realtime update from activities table:', payload);
    })
    .subscribe();

  // Subscribe to assessments table changes
  const assessmentsChannel = supabase.channel('assessments-realtime')
    .on('postgres_changes', { 
      event: '*', 
      schema: 'public', 
      table: 'assessments' 
    }, payload => {
      console.log('Realtime update from assessments table:', payload);
    })
    .subscribe();

  return [analysesChannel, activitiesChannel, assessmentsChannel];
};

// Initialize realtime subscriptions
// Use a try-catch to prevent any errors here from breaking the app
try {
  setupRealtimeSubscriptions();
} catch (error) {
  console.error("Error setting up realtime subscriptions:", error);
}
